security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern:             .*
            context:             user
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                require_previous_session: false
            logout:
                invalidate_session: false
            anonymous:          true
            oauth:
                resource_owners:
                    facebook:  "/login/check-facebook"
                    strava:    "/login/check-strava"
                    runkeeper: "/login/check-runkeeper"
                login_path:        /login
                use_referer: true
                failure_path:      /login
                oauth_user_provider:
                    service: caldera.user_provider

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: /edit$, role: ROLE_USER }
        - { path: /add$, role: ROLE_USER }
        - { path: /addsubride, role: ROLE_USER }
        - { path: /addincident, role: ROLE_USER }
        - { path: /addcity, role: ROLE_USER }
        - { path: /editsubride, role: ROLE_USER }
        - { path: /addphoto, role: ROLE_USER }
        - { path: /addtrack, role: ROLE_USER }
        - { path: /participation, role: ROLE_USER }

        - { path: ^/app, role: ROLE_USER }
        - { path: ^/track, role: ROLE_USER }
        - { path: ^/photos, role: ROLE_USER }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }


#    acl:
#        connection: default

    role_hierarchy:
        ROLE_USER_ADMIN:
            - ROLE_SONATA_USER_ADMIN_USER_LIST
            - ROLE_SONATA_USER_ADMIN_USER_VIEW
            - ROLE_SONATA_USER_ADMIN_USER_CREATE
            - ROLE_SONATA_USER_ADMIN_USER_EDIT
            - ROLE_SONATA_USER_ADMIN_USER_DELETE

        ROLE_RIDE_EDITOR:
            - ROLE_SONATA_ADMIN_RIDE_LIST
            - ROLE_SONATA_ADMIN_RIDE_VIEW
            - ROLE_SONATA_ADMIN_RIDE_EDIT
            - ROLE_SONATA_ADMIN_RIDE_CREATE

        ROLE_CITY_EDITOR:
            - ROLE_SONATA_ADMIN_USER_LIST
            - ROLE_SONATA_ADMIN_USER_VIEW
            - ROLE_SONATA_ADMIN_USER_EDIT

        ROLE_FOOBAR:      []
        ROLE_EDITOR:      [ROLE_USER, ROLE_RIDE_EDTIOR, ROLE_CITY_EDITOR]
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_USER_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, ROLE_USER_ADMIN]

    access_decision_manager:
        strategy: unanimous
